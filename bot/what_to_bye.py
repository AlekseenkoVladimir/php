'''
https://t.me/whatIWishToByeBot
'''
import telebot
from telebot import types
import time
import json

API = '6706058315:AAGKcp9hapB0H8WP9NJOEXLV6YCpySKz5_w'
BUTTONS = ['–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ ‚úçÔ∏è', '–°–ø–∏—Å–æ–∫ –¥–µ–ª üìÉ']
WEEK_BUTTONS = ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']
TIME_START = 7
TIME_END = 21
TASK_BUTTONS = ['‚úîÔ∏è','‚ùå','üìÜ','üïì']

todo_list = []

bot = telebot.TeleBot(API)

def task_keyboard(task_id):
    keyboard = types.InlineKeyboardMarkup(row_width=4)
    keyboard_buttons = []
    for button in TASK_BUTTONS:
        data = {
            'id': task_id,
            'action': button
            }
        print(data)
        data_json = json.dumps(data)
        print(data_json)
        task_button = types.InlineKeyboardButton(button, callback_data=data_json)
        keyboard_buttons.append(task_button)
    keyboard.add(*keyboard_buttons)
    return keyboard

def add_new_task(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:')


def print_todo_list(message):
    # text_list = ''
    if  not todo_list:
        bot.send_message(message.chat.id, '–í–∞—à —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç!')
    else:
        for i, todo in enumerate(todo_list):
            text = f'–ó–∞–¥–∞—á–∞ ‚Ññ{i+1}. {todo.name}\n{todo.day} - {todo.time}\n'
            bot.send_message(message.chat.id, text, reply_markup=task_keyboard(todo.id))


class Task:
    def __init__(self, name, task_day='', task_time=''):
        self.id = time.time()
        self.name = name
        self.day = task_day
        self.time = task_time


@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=False)
    new_task_btn = types.KeyboardButton(BUTTONS[0])
    todo_list_btn = types.KeyboardButton(BUTTONS[1])
    markup.row(new_task_btn, todo_list_btn)
    bot.send_message(
        message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –Ω–∞–ø–∏—à–∏ '–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞' –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –∏–ª–∏ '–°–ø–∏—Å–æ–∫ –¥–µ–ª' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–≤–æ–µ–≥–æ —Å–ø–∏—Å–∫–∞", reply_markup=markup)

@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, \
                     "–ü—Ä–∏–≤–µ—Ç! –í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n/start ‚Äì –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n/help ‚Äì —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\n/new_task ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É\n/todo_list ‚Äì –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ª")

@bot.message_handler(commands=['new_task'])
def newtask(message):
    add_new_task(message)

@bot.message_handler(commands=['todo_list'])
def todolist(message):
    print_todo_list(message)

@bot.message_handler(content_types=['text'])
def answer(message):
    if message.text == BUTTONS[0]:
        add_new_task(message)
    elif message.text == BUTTONS[1]:
        print_todo_list(message)
    else:
        new_task = Task(message.text)
        todo_list.append(new_task)
        bot.send_message(message.chat.id, f'–î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–¥–∞—á–∞:\n{new_task.name}')
        keyboard = types.InlineKeyboardMarkup(row_width=4)
        keyboard_buttons = []
        for day in WEEK_BUTTONS:
            day_btn = types.InlineKeyboardButton(day, callback_data=day)
            keyboard_buttons.append(day_btn)
            # keyboard.add(day_btn)
        keyboard.add(*keyboard_buttons)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞—á–∏', reply_markup=keyboard)
        keyboard_time = types.InlineKeyboardMarkup(row_width=5)
        keyboard_buttons_time = []
        for time in range(TIME_START, TIME_END + 1):
            time_str = f'{time}:00'
            time_btn = types.InlineKeyboardButton(time_str, callback_data=f'time_select{time_str}')
            keyboard_buttons_time.append(time_btn)
        keyboard_time.add(*keyboard_buttons_time)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞—á–∏', reply_markup=keyboard_time)

@bot.callback_query_handler(func=lambda call: call.data in WEEK_BUTTONS)
def day_select(call):
    if len(todo_list) > 0:
        todo_list[-1].day = call.data
    bot.edit_message_text(f'–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ {call.data}', call.message.chat.id, call.message.message_id)
    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda call: call.data[:11] == 'time_select')
def time_select(call):
    if len(todo_list) > 0:
        todo_list[-1].time = call.data[11:]
    bot.edit_message_text(f'–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ {call.data[11:]}', call.message.chat.id, call.message.message_id)
    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda call: True)
def handler(call):
    data = json.loads(call.data)
    print(f'–ù–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É {data}')

    
bot.infinity_polling()
